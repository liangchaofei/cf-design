{"remainingRequest":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/liangchaofei/Desktop/fe/cf-design/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/liangchaofei/Desktop/fe/cf-design/node_modules/source-map-loader/index.js!/Users/liangchaofei/Desktop/fe/cf-design/src/components/Badge/index.tsx","dependencies":[{"path":"/Users/liangchaofei/Desktop/fe/cf-design/src/components/Badge/index.tsx","mtime":1584892863640},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/cache-loader/dist/cjs.js","mtime":1582378815255},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/thread-loader/dist/cjs.js","mtime":1582378816406},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1577177587531},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/source-map-loader/index.js","mtime":1582378816175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2xpYW5nY2hhb2ZlaS9EZXNrdG9wL2ZlL2NmLWRlc2lnbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CnZhciBfanN4RmlsZU5hbWUgPSAiL1VzZXJzL2xpYW5nY2hhb2ZlaS9EZXNrdG9wL2ZlL2NmLWRlc2lnbi9zcmMvY29tcG9uZW50cy9CYWRnZS9pbmRleC50c3giOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZW50ZXJNb2R1bGUgOiB1bmRlZmluZWQ7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQuc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCAnLi9pbmRleC5sZXNzJzsKdmFyIGNvbG9yQXJyID0gewogICdzdWNjZXNzJzogJyM1MmM0MWEnLAogICd3YXJuaW5nJzogJyNmYWFkMTQnLAogICdlcnJvcic6ICcjZjUyMjJkJywKICAnZGVmYXVsdCc6ICcjZDlkOWQ5JywKICAncHJvY2Vzc2luZyc6ICcjMTg5MGZmJwp9Owp2YXIgQmFkZ2UgPSBSZWFjdC5tZW1vKGZ1bmN0aW9uIChwcm9wcykgewogIHZhciBjb2xvciA9IHByb3BzLmNvbG9yLAogICAgICBjb3VudCA9IHByb3BzLmNvdW50LAogICAgICBkb3QgPSBwcm9wcy5kb3QsCiAgICAgIG9mZnNldCA9IHByb3BzLm9mZnNldCwKICAgICAgb3ZlcmZsb3dDb3VudCA9IHByb3BzLm92ZXJmbG93Q291bnQsCiAgICAgIHNob3daZXJvID0gcHJvcHMuc2hvd1plcm8sCiAgICAgIHN0YXR1cyA9IHByb3BzLnN0YXR1cywKICAgICAgdGV4dCA9IHByb3BzLnRleHQsCiAgICAgIHN0eWxlID0gcHJvcHMuc3R5bGU7CiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogImNmQmFkZ2VXcmFwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgc3RhdHVzIHx8IGNvbG9yID8gUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiAic3RhdHVzRG90V3JhcCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyOQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7CiAgICBjbGFzc05hbWU6ICJkb3QiLAogICAgc3R5bGU6IHsKICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvciB8fCBjb2xvckFycltzdGF0dXNdIHx8IGNvbG9yQXJyLmRlZmF1bHQKICAgIH0sCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCB0ZXh0KSA6IFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsKICAgIGNsYXNzTmFtZTogImJhZGdlICAiLmNvbmNhdChkb3QgPyAnYmFkZ2VEb3QnIDogJycpLAogICAgc3R5bGU6IF9vYmplY3RTcHJlYWQoewogICAgICByaWdodDogb2Zmc2V0ID8gb2Zmc2V0WzBdICsgJ3B4JyA6ICcnLAogICAgICB0b3A6IG9mZnNldCA/IG9mZnNldFsxXSArICdweCcgOiAnJywKICAgICAgZGlzcGxheTogIXNob3daZXJvICYmICFjb3VudCA/ICdub25lJyA6ICdpbmxpbmUtYmxvY2snCiAgICB9LCBzdHlsZSksCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICFkb3QgJiYgKG92ZXJmbG93Q291bnQgJiYgb3ZlcmZsb3dDb3VudCA8IGNvdW50ID8gIiIuY29uY2F0KG92ZXJmbG93Q291bnQsICIrIikgOiBjb3VudCkpLCB0ZXh0KSk7Cn0pOwp2YXIgX2RlZmF1bHQgPSBCYWRnZTsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CgppZiAodHlwZW9mIEJhZGdlICE9PSAndW5kZWZpbmVkJyAmJiBCYWRnZSAmJiBCYWRnZSA9PT0gT2JqZWN0KEJhZGdlKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKEJhZGdlKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShCYWRnZSwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkJhZGdlIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvY29tcG9uZW50cy9CYWRnZS9pbmRleC50c3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQgOiB1bmRlZmluZWQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGNvbG9yQXJyLCAiY29sb3JBcnIiLCAiL1VzZXJzL2xpYW5nY2hhb2ZlaS9EZXNrdG9wL2ZlL2NmLWRlc2lnbi9zcmMvY29tcG9uZW50cy9CYWRnZS9pbmRleC50c3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihCYWRnZSwgIkJhZGdlIiwgIi9Vc2Vycy9saWFuZ2NoYW9mZWkvRGVza3RvcC9mZS9jZi1kZXNpZ24vc3JjL2NvbXBvbmVudHMvQmFkZ2UvaW5kZXgudHN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoX2RlZmF1bHQsICJkZWZhdWx0IiwgIi9Vc2Vycy9saWFuZ2NoYW9mZWkvRGVza3RvcC9mZS9jZi1kZXNpZ24vc3JjL2NvbXBvbmVudHMvQmFkZ2UvaW5kZXgudHN4Iik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5sZWF2ZU1vZHVsZSA6IHVuZGVmaW5lZDsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/liangchaofei/Desktop/fe/cf-design/src/components/Badge/index.tsx"],"names":["React","colorArr","Badge","memo","props","color","count","dot","offset","overflowCount","showZero","status","text","style","backgroundColor","default","right","top","display"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAGA,IAAMC,QAAa,GAAG;AAClB,aAAW,SADO;AAElB,aAAW,SAFO;AAGlB,WAAS,SAHS;AAIlB,aAAW,SAJO;AAKlB,gBAAc;AALI,CAAtB;AAmBA,IAAMC,KAAK,GAAGF,KAAK,CAACG,IAAN,CAAW,UAACC,KAAD,EAAmB;AAAA,MAChCC,KADgC,GAC2CD,KAD3C,CAChCC,KADgC;AAAA,MACzBC,KADyB,GAC2CF,KAD3C,CACzBE,KADyB;AAAA,MAClBC,GADkB,GAC2CH,KAD3C,CAClBG,GADkB;AAAA,MACbC,MADa,GAC2CJ,KAD3C,CACbI,MADa;AAAA,MACLC,aADK,GAC2CL,KAD3C,CACLK,aADK;AAAA,MACUC,QADV,GAC2CN,KAD3C,CACUM,QADV;AAAA,MACoBC,MADpB,GAC2CP,KAD3C,CACoBO,MADpB;AAAA,MAC4BC,IAD5B,GAC2CR,KAD3C,CAC4BQ,IAD5B;AAAA,MACiCC,KADjC,GAC2CT,KAD3C,CACiCS,KADjC;AAExC,SACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,MAAM,IAAIN,KAAV,GAAkB;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACd;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,KAAK,EAAE;AAAES,MAAAA,eAAe,EAAET,KAAK,IAAIJ,QAAQ,CAACU,MAAD,CAAjB,IAA6BV,QAAQ,CAACc;AAAzD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,EAEbH,IAFa,CAAlB,GAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,mBAAYL,GAAG,GAAG,UAAH,GAAgB,EAA/B,CADb;AAEI,IAAA,KAAK;AACDS,MAAAA,KAAK,EAAER,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAN,GAAY,IAAf,GAAsB,EADlC;AAEDS,MAAAA,GAAG,EAAET,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAN,GAAY,IAAf,GAAsB,EAFhC;AAGDU,MAAAA,OAAO,EAAE,CAACR,QAAD,IAAa,CAACJ,KAAd,GAAsB,MAAtB,GAA+B;AAHvC,OAIEO,KAJF,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASK,CAACN,GAAD,KAASE,aAAa,IAAIA,aAAa,GAAGH,KAAjC,aAA4CG,aAA5C,SAA+DH,KAAxE,CATL,CADJ,EAYKM,IAZL,CANZ,CADJ;AAwBH,CA1Ba,CAAd;eA4BeV,K;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA/CMD,Q;0BAmBAC,K","sourcesContent":["import React from 'react';\nimport './index.less';\n\n\nconst colorArr: any = {\n    'success': '#52c41a',\n    'warning': '#faad14',\n    'error': '#f5222d',\n    'default': '#d9d9d9',\n    'processing': '#1890ff'\n}\n\ninterface IProps {\n    style: Object; //自定义样式\n    color: string; // 自定义小圆点的颜色\n    count: number; // 展示的数字\n    dot: boolean; // 不展示数字,只展示一个小圆点\n    offset: any[];// 设置状态点的偏移\n    overflowCount: number; //展示封顶的数字\n    showZero: false; // 当数值为0时是否展示Badge\n    status: string; // 设置badge为状态点, 类型有success|warning|error|default|processing\n    text: string; // 当设置status时状态点的文本\n}\nconst Badge = React.memo((props: IProps) => {\n    const { color, count, dot, offset, overflowCount, showZero, status, text,style } = props;\n    return (\n        <div className=\"cfBadgeWrap\">\n            {\n                status || color ? <div className=\"statusDotWrap\">\n                    <span className=\"dot\" style={{ backgroundColor: color || colorArr[status] || colorArr.default }}></span>\n                    {text}\n                </div> :\n                    <div>\n                        <span\n                            className={`badge  ${dot ? 'badgeDot' : ''}`}\n                            style={{\n                                right: offset ? offset[0] + 'px' : '',\n                                top: offset ? offset[1] + 'px' : '',\n                                display: !showZero && !count ? 'none' : 'inline-block',\n                                ...style\n                            }}\n                        >\n                            {!dot && (overflowCount && overflowCount < count ? `${overflowCount}+` : count)}\n                        </span>\n                        {text}\n                    </div>\n            }\n        </div>\n    )\n})\n\nexport default Badge;"]}]}