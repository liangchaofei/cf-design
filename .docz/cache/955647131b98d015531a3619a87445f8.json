{"remainingRequest":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/liangchaofei/Desktop/fe/cf-design/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/liangchaofei/Desktop/fe/cf-design/node_modules/source-map-loader/index.js!/Users/liangchaofei/Desktop/fe/cf-design/src/components/Badge/index.tsx","dependencies":[{"path":"/Users/liangchaofei/Desktop/fe/cf-design/src/components/Badge/index.tsx","mtime":1582628234516},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/cache-loader/dist/cjs.js","mtime":1582378815255},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/thread-loader/dist/cjs.js","mtime":1582378816406},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1577177587531},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/source-map-loader/index.js","mtime":1582378816175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvbGlhbmdjaGFvZmVpL0Rlc2t0b3AvZmUvY2YtZGVzaWduL3NyYy9jb21wb25lbnRzL0JhZGdlL2luZGV4LnRzeCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5lbnRlck1vZHVsZSA6IHVuZGVmaW5lZDsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZGVmYXVsdC5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0ICcuL2luZGV4Lmxlc3MnOwp2YXIgY29sb3JBcnIgPSB7CiAgJ3N1Y2Nlc3MnOiAnIzUyYzQxYScsCiAgJ3dhcm5pbmcnOiAnI2ZhYWQxNCcsCiAgJ2Vycm9yJzogJyNmNTIyMmQnLAogICdkZWZhdWx0JzogJyNkOWQ5ZDknLAogICdwcm9jZXNzaW5nJzogJyMxODkwZmYnCn07CnZhciBCYWRnZSA9IFJlYWN0Lm1lbW8oZnVuY3Rpb24gKHByb3BzKSB7CiAgdmFyIGNvbG9yID0gcHJvcHMuY29sb3IsCiAgICAgIGNvdW50ID0gcHJvcHMuY291bnQsCiAgICAgIGRvdCA9IHByb3BzLmRvdCwKICAgICAgb2Zmc2V0ID0gcHJvcHMub2Zmc2V0LAogICAgICBvdmVyZmxvd0NvdW50ID0gcHJvcHMub3ZlcmZsb3dDb3VudCwKICAgICAgc2hvd1plcm8gPSBwcm9wcy5zaG93WmVybywKICAgICAgc3RhdHVzID0gcHJvcHMuc3RhdHVzLAogICAgICB0ZXh0ID0gcHJvcHMudGV4dDsKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiAiY2ZCYWRnZVdyYXAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBzdGF0dXMgfHwgY29sb3IgPyBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJzdGF0dXNEb3RXcmFwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsKICAgIGNsYXNzTmFtZTogImRvdCIsCiAgICBzdHlsZTogewogICAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yIHx8IGNvbG9yQXJyW3N0YXR1c10gfHwgY29sb3JBcnIuZGVmYXVsdAogICAgfSwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksIHRleHQpIDogUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgewogICAgY2xhc3NOYW1lOiAiYmFkZ2UgIi5jb25jYXQoZG90ID8gJ2JhZGdlRG90JyA6ICcnKSwKICAgIHN0eWxlOiB7CiAgICAgIHJpZ2h0OiBvZmZzZXQgPyBvZmZzZXRbMF0gKyAncHgnIDogJycsCiAgICAgIHRvcDogb2Zmc2V0ID8gb2Zmc2V0WzFdICsgJ3B4JyA6ICcnLAogICAgICBkaXNwbGF5OiAhc2hvd1plcm8gJiYgIWNvdW50ID8gJ25vbmUnIDogJ2lubGluZS1ibG9jaycKICAgIH0sCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICFkb3QgJiYgKG92ZXJmbG93Q291bnQgJiYgb3ZlcmZsb3dDb3VudCA8IGNvdW50ID8gIiIuY29uY2F0KG92ZXJmbG93Q291bnQsICIrIikgOiBjb3VudCkpLCB0ZXh0KSk7Cn0pOwp2YXIgX2RlZmF1bHQgPSBCYWRnZTsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CgppZiAodHlwZW9mIEJhZGdlICE9PSAndW5kZWZpbmVkJyAmJiBCYWRnZSAmJiBCYWRnZSA9PT0gT2JqZWN0KEJhZGdlKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKEJhZGdlKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShCYWRnZSwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkJhZGdlIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvY29tcG9uZW50cy9CYWRnZS9pbmRleC50c3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQgOiB1bmRlZmluZWQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGNvbG9yQXJyLCAiY29sb3JBcnIiLCAiL1VzZXJzL2xpYW5nY2hhb2ZlaS9EZXNrdG9wL2ZlL2NmLWRlc2lnbi9zcmMvY29tcG9uZW50cy9CYWRnZS9pbmRleC50c3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihCYWRnZSwgIkJhZGdlIiwgIi9Vc2Vycy9saWFuZ2NoYW9mZWkvRGVza3RvcC9mZS9jZi1kZXNpZ24vc3JjL2NvbXBvbmVudHMvQmFkZ2UvaW5kZXgudHN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoX2RlZmF1bHQsICJkZWZhdWx0IiwgIi9Vc2Vycy9saWFuZ2NoYW9mZWkvRGVza3RvcC9mZS9jZi1kZXNpZ24vc3JjL2NvbXBvbmVudHMvQmFkZ2UvaW5kZXgudHN4Iik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5sZWF2ZU1vZHVsZSA6IHVuZGVmaW5lZDsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/liangchaofei/Desktop/fe/cf-design/src/components/Badge/index.tsx"],"names":["React","colorArr","Badge","memo","props","color","count","dot","offset","overflowCount","showZero","status","text","backgroundColor","default","right","top","display"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAGA,IAAMC,QAAa,GAAG;AAClB,aAAW,SADO;AAElB,aAAW,SAFO;AAGlB,WAAS,SAHS;AAIlB,aAAW,SAJO;AAKlB,gBAAc;AALI,CAAtB;AAkBA,IAAMC,KAAK,GAAGF,KAAK,CAACG,IAAN,CAAW,UAACC,KAAD,EAAmB;AAAA,MAChCC,KADgC,GACqCD,KADrC,CAChCC,KADgC;AAAA,MACzBC,KADyB,GACqCF,KADrC,CACzBE,KADyB;AAAA,MAClBC,GADkB,GACqCH,KADrC,CAClBG,GADkB;AAAA,MACbC,MADa,GACqCJ,KADrC,CACbI,MADa;AAAA,MACLC,aADK,GACqCL,KADrC,CACLK,aADK;AAAA,MACUC,QADV,GACqCN,KADrC,CACUM,QADV;AAAA,MACoBC,MADpB,GACqCP,KADrC,CACoBO,MADpB;AAAA,MAC4BC,IAD5B,GACqCR,KADrC,CAC4BQ,IAD5B;AAExC,SACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,MAAM,IAAIN,KAAV,GAAkB;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACd;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,KAAK,EAAE;AAAEQ,MAAAA,eAAe,EAAER,KAAK,IAAIJ,QAAQ,CAACU,MAAD,CAAjB,IAA6BV,QAAQ,CAACa;AAAzD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,EAEbF,IAFa,CAAlB,GAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,kBAAWL,GAAG,GAAG,UAAH,GAAgB,EAA9B,CADb;AAEI,IAAA,KAAK,EAAE;AACHQ,MAAAA,KAAK,EAAEP,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAN,GAAY,IAAf,GAAsB,EADhC;AAEHQ,MAAAA,GAAG,EAAER,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAN,GAAY,IAAf,GAAsB,EAF9B;AAGHS,MAAAA,OAAO,EAAE,CAACP,QAAD,IAAa,CAACJ,KAAd,GAAsB,MAAtB,GAA+B;AAHrC,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQK,CAACC,GAAD,KAASE,aAAa,IAAIA,aAAa,GAAGH,KAAjC,aAA4CG,aAA5C,SAA+DH,KAAxE,CARL,CADJ,EAWKM,IAXL,CANZ,CADJ;AAuBH,CAzBa,CAAd;eA2BeV,K;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA7CMD,Q;0BAkBAC,K","sourcesContent":["import React from 'react';\nimport './index.less';\n\n\nconst colorArr: any = {\n    'success': '#52c41a',\n    'warning': '#faad14',\n    'error': '#f5222d',\n    'default': '#d9d9d9',\n    'processing': '#1890ff'\n}\n\ninterface IProps {\n    color: string; // 自定义小圆点的颜色\n    count: number; // 展示的数字\n    dot: boolean; // 不展示数字,只展示一个小圆点\n    offset: any[];// 设置状态点的偏移\n    overflowCount: number; //展示封顶的数字\n    showZero: false; // 当数值为0时是否展示Badge\n    status: string; // 设置badge为状态点, 类型有success|warning|error|default|processing\n    text: string; // 当设置status时状态点的文本\n}\nconst Badge = React.memo((props: IProps) => {\n    const { color, count, dot, offset, overflowCount, showZero, status, text } = props;\n    return (\n        <div className=\"cfBadgeWrap\">\n            {\n                status || color ? <div className=\"statusDotWrap\">\n                    <span className=\"dot\" style={{ backgroundColor: color || colorArr[status] || colorArr.default }}></span>\n                    {text}\n                </div> :\n                    <div>\n                        <span\n                            className={`badge ${dot ? 'badgeDot' : ''}`}\n                            style={{\n                                right: offset ? offset[0] + 'px' : '',\n                                top: offset ? offset[1] + 'px' : '',\n                                display: !showZero && !count ? 'none' : 'inline-block',\n                            }}\n                        >\n                            {!dot && (overflowCount && overflowCount < count ? `${overflowCount}+` : count)}\n                        </span>\n                        {text}\n                    </div>\n            }\n        </div>\n    )\n})\n\nexport default Badge;"]}]}