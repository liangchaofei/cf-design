{"remainingRequest":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/liangchaofei/Desktop/fe/cf-design/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/liangchaofei/Desktop/fe/cf-design/node_modules/source-map-loader/index.js!/Users/liangchaofei/Desktop/fe/cf-design/src/components/Badge/index.tsx","dependencies":[{"path":"/Users/liangchaofei/Desktop/fe/cf-design/src/components/Badge/index.tsx","mtime":1582628234516},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/cache-loader/dist/cjs.js","mtime":1582378815255},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/thread-loader/dist/cjs.js","mtime":1582378816406},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1577177587531},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/source-map-loader/index.js","mtime":1582378816175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydCcuL2luZGV4Lmxlc3MnO3ZhciBjb2xvckFycj17J3N1Y2Nlc3MnOicjNTJjNDFhJywnd2FybmluZyc6JyNmYWFkMTQnLCdlcnJvcic6JyNmNTIyMmQnLCdkZWZhdWx0JzonI2Q5ZDlkOScsJ3Byb2Nlc3NpbmcnOicjMTg5MGZmJ307dmFyIEJhZGdlPVJlYWN0Lm1lbW8oZnVuY3Rpb24ocHJvcHMpe3ZhciBjb2xvcj1wcm9wcy5jb2xvcixjb3VudD1wcm9wcy5jb3VudCxkb3Q9cHJvcHMuZG90LG9mZnNldD1wcm9wcy5vZmZzZXQsb3ZlcmZsb3dDb3VudD1wcm9wcy5vdmVyZmxvd0NvdW50LHNob3daZXJvPXByb3BzLnNob3daZXJvLHN0YXR1cz1wcm9wcy5zdGF0dXMsdGV4dD1wcm9wcy50ZXh0O3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6ImNmQmFkZ2VXcmFwIn0sc3RhdHVzfHxjb2xvcj9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6InN0YXR1c0RvdFdyYXAifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIix7Y2xhc3NOYW1lOiJkb3QiLHN0eWxlOntiYWNrZ3JvdW5kQ29sb3I6Y29sb3J8fGNvbG9yQXJyW3N0YXR1c118fGNvbG9yQXJyLmRlZmF1bHR9fSksdGV4dCk6UmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IixudWxsLFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLHtjbGFzc05hbWU6ImJhZGdlICIuY29uY2F0KGRvdD8nYmFkZ2VEb3QnOicnKSxzdHlsZTp7cmlnaHQ6b2Zmc2V0P29mZnNldFswXSsncHgnOicnLHRvcDpvZmZzZXQ/b2Zmc2V0WzFdKydweCc6JycsZGlzcGxheTohc2hvd1plcm8mJiFjb3VudD8nbm9uZSc6J2lubGluZS1ibG9jayd9fSwhZG90JiYob3ZlcmZsb3dDb3VudCYmb3ZlcmZsb3dDb3VudDxjb3VudD8iIi5jb25jYXQob3ZlcmZsb3dDb3VudCwiKyIpOmNvdW50KSksdGV4dCkpO30pO2V4cG9ydCBkZWZhdWx0IEJhZGdlO2lmKHR5cGVvZiBCYWRnZSE9PSd1bmRlZmluZWQnJiZCYWRnZSYmQmFkZ2U9PT1PYmplY3QoQmFkZ2UpJiZPYmplY3QuaXNFeHRlbnNpYmxlKEJhZGdlKSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KEJhZGdlLCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJCYWRnZSIsZmlsZW5hbWU6InNyYy9jb21wb25lbnRzL0JhZGdlL2luZGV4LnRzeCJ9fSk7fQ=="},{"version":3,"sources":["/Users/liangchaofei/Desktop/fe/cf-design/src/components/Badge/index.tsx"],"names":["React","colorArr","Badge","memo","props","color","count","dot","offset","overflowCount","showZero","status","text","backgroundColor","default","right","top","display"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,cAAP,CAGA,GAAMC,CAAAA,QAAa,CAAG,CAClB,UAAW,SADO,CAElB,UAAW,SAFO,CAGlB,QAAS,SAHS,CAIlB,UAAW,SAJO,CAKlB,aAAc,SALI,CAAtB,CAkBA,GAAMC,CAAAA,KAAK,CAAGF,KAAK,CAACG,IAAN,CAAW,SAACC,KAAD,CAAmB,IAChCC,CAAAA,KADgC,CACqCD,KADrC,CAChCC,KADgC,CACzBC,KADyB,CACqCF,KADrC,CACzBE,KADyB,CAClBC,GADkB,CACqCH,KADrC,CAClBG,GADkB,CACbC,MADa,CACqCJ,KADrC,CACbI,MADa,CACLC,aADK,CACqCL,KADrC,CACLK,aADK,CACUC,QADV,CACqCN,KADrC,CACUM,QADV,CACoBC,MADpB,CACqCP,KADrC,CACoBO,MADpB,CAC4BC,IAD5B,CACqCR,KADrC,CAC4BQ,IAD5B,CAExC,MACI,4BAAK,SAAS,CAAC,aAAf,EAEQD,MAAM,EAAIN,KAAV,CAAkB,2BAAK,SAAS,CAAC,eAAf,EACd,4BAAM,SAAS,CAAC,KAAhB,CAAsB,KAAK,CAAE,CAAEQ,eAAe,CAAER,KAAK,EAAIJ,QAAQ,CAACU,MAAD,CAAjB,EAA6BV,QAAQ,CAACa,OAAzD,CAA7B,EADc,CAEbF,IAFa,CAAlB,CAII,+BACI,4BACI,SAAS,iBAAWL,GAAG,CAAG,UAAH,CAAgB,EAA9B,CADb,CAEI,KAAK,CAAE,CACHQ,KAAK,CAAEP,MAAM,CAAGA,MAAM,CAAC,CAAD,CAAN,CAAY,IAAf,CAAsB,EADhC,CAEHQ,GAAG,CAAER,MAAM,CAAGA,MAAM,CAAC,CAAD,CAAN,CAAY,IAAf,CAAsB,EAF9B,CAGHS,OAAO,CAAE,CAACP,QAAD,EAAa,CAACJ,KAAd,CAAsB,MAAtB,CAA+B,cAHrC,CAFX,EAQK,CAACC,GAAD,GAASE,aAAa,EAAIA,aAAa,CAAGH,KAAjC,WAA4CG,aAA5C,MAA+DH,KAAxE,CARL,CADJ,CAWKM,IAXL,CANZ,CADJ,CAuBH,CAzBa,CAAd,CA2BA,cAAeV,CAAAA,KAAf,C","sourcesContent":["import React from 'react';\nimport './index.less';\n\n\nconst colorArr: any = {\n    'success': '#52c41a',\n    'warning': '#faad14',\n    'error': '#f5222d',\n    'default': '#d9d9d9',\n    'processing': '#1890ff'\n}\n\ninterface IProps {\n    color: string; // 自定义小圆点的颜色\n    count: number; // 展示的数字\n    dot: boolean; // 不展示数字,只展示一个小圆点\n    offset: any[];// 设置状态点的偏移\n    overflowCount: number; //展示封顶的数字\n    showZero: false; // 当数值为0时是否展示Badge\n    status: string; // 设置badge为状态点, 类型有success|warning|error|default|processing\n    text: string; // 当设置status时状态点的文本\n}\nconst Badge = React.memo((props: IProps) => {\n    const { color, count, dot, offset, overflowCount, showZero, status, text } = props;\n    return (\n        <div className=\"cfBadgeWrap\">\n            {\n                status || color ? <div className=\"statusDotWrap\">\n                    <span className=\"dot\" style={{ backgroundColor: color || colorArr[status] || colorArr.default }}></span>\n                    {text}\n                </div> :\n                    <div>\n                        <span\n                            className={`badge ${dot ? 'badgeDot' : ''}`}\n                            style={{\n                                right: offset ? offset[0] + 'px' : '',\n                                top: offset ? offset[1] + 'px' : '',\n                                display: !showZero && !count ? 'none' : 'inline-block',\n                            }}\n                        >\n                            {!dot && (overflowCount && overflowCount < count ? `${overflowCount}+` : count)}\n                        </span>\n                        {text}\n                    </div>\n            }\n        </div>\n    )\n})\n\nexport default Badge;"]}]}