{"remainingRequest":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/liangchaofei/Desktop/fe/cf-design/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/liangchaofei/Desktop/fe/cf-design/node_modules/source-map-loader/index.js!/Users/liangchaofei/Desktop/fe/cf-design/src/components/Message/index.tsx","dependencies":[{"path":"/Users/liangchaofei/Desktop/fe/cf-design/src/components/Message/index.tsx","mtime":1584884600126},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/cache-loader/dist/cjs.js","mtime":1582378815255},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/thread-loader/dist/cjs.js","mtime":1582378816406},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1577177587531},{"path":"/Users/liangchaofei/Desktop/fe/cf-design/node_modules/source-map-loader/index.js","mtime":1582378816175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvbGlhbmdjaGFvZmVpL0Rlc2t0b3AvZmUvY2YtZGVzaWduL3NyYy9jb21wb25lbnRzL01lc3NhZ2UvaW5kZXgudHN4IjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmVudGVyTW9kdWxlIDogdW5kZWZpbmVkOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5kZWZhdWx0LnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgppbXBvcnQgTm90aWZpY2F0aW9uIGZyb20gJ3JjLW5vdGlmaWNhdGlvbic7CmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nOwppbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJzsKaW1wb3J0ICdyYy1ub3RpZmljYXRpb24vYXNzZXRzL2luZGV4LmNzcyc7CmltcG9ydCAnLi9pbmRleC5sZXNzJzsKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKCnZhciBNZXNzYWdlID0gZnVuY3Rpb24gKCkgewogIHZhciBtZXNzYWdlID0gbnVsbDsKICB2YXIgaWNvblR5cGUgPSB7CiAgICBzdWNjZXNzOiAnRmFSZWdDaGVja0NpcmNsZScsCiAgICB3YXJuaW5nOiAnRmFSZWdNZWgnLAogICAgaW5mbzogJ0ZhUmVnTGlnaHRidWxiJywKICAgIGVycm9yOiAnRmFSZWdUaW1lc0NpcmNsZScKICB9OwogIC8qKgogICAqIG5vdGljZeexu+Wei+W8ueeqlwogICAqIEBwYXJhbSB7Y29uZmlnfSAgIOaPkOekuuahhumFjee9ruWxnuaApwogICAqICAgQHBhcmFtIHt0eXBlfSBzdHJpbmcg5o+Q56S656qX57G75Z6LCiAgICogICBAcGFyYW0ge2J0bn0gIFJlYWN0Tm9kZSDoh6rlrprkuYnlhbPpl63mjInpkq4KICAgKiAgIEBwYXJhbSB7Y2xhc3NOYW1lfSAgc3RyaW5nIOiHquWumuS5iSBDU1MgY2xhc3MKICAgKiAgIEBwYXJhbSB7ZHVyYXRpb259ICAg6buY6K6kIDQuNSDnp5LlkI7oh6rliqjlhbPpl63vvIzphY3nva7kuLogbnVsbCDliJnkuI3oh6rliqjlhbPpl60KICAgKiAgIEBwYXJhbSB7Z2V0Q29udGFpbmVyfSAgSFRNTE5vZGUg6YWN572u5riy5p+T6IqC54K555qE6L6T5Ye65L2N572uCiAgICogICBAcGFyYW0ge2ljb259ICBSZWFjdE5vZGUg6Ieq5a6a5LmJ5Zu+5qCHCiAgICogICBAcGFyYW0ge2tleX0gIHN0cmluZyDlvZPliY3mj5DnpLrllK/kuIDmoIflv5cKICAgKiAgIEBwYXJhbSB7Y29udGVudH0gIHN0cmluZ3xSZWFjdE5vZGUg5o+Q56S65qCH6aKY77yM5b+F6YCJCiAgICogICBAcGFyYW0ge29uQ2xvc2V9ICBmdW5jIOeCueWHu+m7mOiupOWFs+mXreaMiemSruaXtuinpuWPkeeahOWbnuiwg+WHveaVsAogICAqICAgQHBhcmFtIHtvbkNsaWNrfSAgZnVuYyDngrnlh7vmj5DnpLrml7bop6blj5HnmoTlm57osIPlh73mlbAKICAgKiAgIEBwYXJhbSB7dG9wfSAgbnVtYmVyIOa2iOaBr+S7jumhtumDqOW8ueWHuuaXtu+8jOi3neemu+mhtumDqOeahOS9jee9ru+8jOWNleS9jeWDj+e0oAogICAqICAgQHBhcmFtIHtjbG9zZUljb259ICAg6Ieq5a6a5LmJ5YWz6Zet5Zu+5qCHCiAgICovCgogIHZhciBwb3AgPSBmdW5jdGlvbiBwb3AocHJvcHMpIHsKICAgIHZhciB0eXBlID0gcHJvcHMudHlwZSwKICAgICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsCiAgICAgICAgX3Byb3BzJGR1cmF0aW9uID0gcHJvcHMuZHVyYXRpb24sCiAgICAgICAgZHVyYXRpb24gPSBfcHJvcHMkZHVyYXRpb24gPT09IHZvaWQgMCA/IDQuNSA6IF9wcm9wcyRkdXJhdGlvbiwKICAgICAgICBfcHJvcHMkZ2V0Q29udGFpbmVyID0gcHJvcHMuZ2V0Q29udGFpbmVyLAogICAgICAgIGdldENvbnRhaW5lciA9IF9wcm9wcyRnZXRDb250YWluZXIgPT09IHZvaWQgMCA/IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGRvY3VtZW50LmJvZHk7CiAgICB9IDogX3Byb3BzJGdldENvbnRhaW5lciwKICAgICAgICBpY29uID0gcHJvcHMuaWNvbiwKICAgICAgICBrZXkgPSBwcm9wcy5rZXksCiAgICAgICAgY29udGVudCA9IHByb3BzLmNvbnRlbnQsCiAgICAgICAgX29uQ2xvc2UgPSBwcm9wcy5vbkNsb3NlLAogICAgICAgIF9vbkNsaWNrID0gcHJvcHMub25DbGljaywKICAgICAgICB0b3AgPSBwcm9wcy50b3AsCiAgICAgICAgX3Byb3BzJGNsb3NhYmxlID0gcHJvcHMuY2xvc2FibGUsCiAgICAgICAgY2xvc2FibGUgPSBfcHJvcHMkY2xvc2FibGUgPT09IHZvaWQgMCA/IHRydWUgOiBfcHJvcHMkY2xvc2FibGUsCiAgICAgICAgY2xvc2VJY29uID0gcHJvcHMuY2xvc2VJY29uOwogICAgbWVzc2FnZS5ub3RpY2UoewogICAgICBjb250ZW50OiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgY2xhc3NOYW1lOiBjbGFzc25hbWVzKCdjZk1lc3NhZ2UnLCBjbGFzc05hbWUpLAogICAgICAgIF9fc291cmNlOiB7CiAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgbGluZU51bWJlcjogNTAKICAgICAgICB9LAogICAgICAgIF9fc2VsZjogdGhpcwogICAgICB9LCAoaWNvbiB8fCBbJ2luZm8nLCAnc3VjY2VzcycsICdlcnJvcicsICd3YXJuaW5nJ10uaW5kZXhPZih0eXBlKSA+IC0xKSAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgY2xhc3NOYW1lOiBjbGFzc25hbWVzKCdpY29uV3JhcCcsIHR5cGUpLAogICAgICAgIF9fc291cmNlOiB7CiAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgbGluZU51bWJlcjogNTMKICAgICAgICB9LAogICAgICAgIF9fc2VsZjogdGhpcwogICAgICB9LCAvLyBAdHMtaWdub3JlCiAgICAgIGljb24gPyBpY29uIDogUmVhY3QuY3JlYXRlRWxlbWVudChJY29uLCB7CiAgICAgICAgdHlwZTogaWNvblR5cGVbdHlwZV0sCiAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICBsaW5lTnVtYmVyOiA1NgogICAgICAgIH0sCiAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgIH0pKSwgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgICAgIGNsYXNzTmFtZTogImNmTm90aWNlVGl0bGUiLAogICAgICAgIF9fc291cmNlOiB7CiAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgbGluZU51bWJlcjogNjAKICAgICAgICB9LAogICAgICAgIF9fc2VsZjogdGhpcwogICAgICB9LCBjb250ZW50KSksCiAgICAgIGtleToga2V5LAogICAgICBjbG9zYWJsZTogY2xvc2FibGUsCiAgICAgIGdldENvbnRhaW5lcjogZ2V0Q29udGFpbmVyLAogICAgICBvbkNsb3NlOiBmdW5jdGlvbiBvbkNsb3NlKCkgewogICAgICAgIF9vbkNsb3NlICYmIF9vbkNsb3NlKCk7CiAgICAgIH0sCiAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7CiAgICAgICAgX29uQ2xpY2sgJiYgX29uQ2xpY2soKTsKICAgICAgfSwKICAgICAgY2xvc2VJY29uOiBjbG9zZUljb24sCiAgICAgIGR1cmF0aW9uOiBkdXJhdGlvbiwKICAgICAgc3R5bGU6IHsKICAgICAgICB0b3A6IHRvcAogICAgICB9CiAgICB9KTsKICB9OwogIC8qKgogICAgICAqIOaPkOekuuaPkOekuue7hOS7tiwg5YWo5bGA5Y+C5pWwCiAgICAgICogQHBhcmFtIHtkdXJhdGlvbn0gbnVtYmVyIOm7mOiupOiHquWKqOWFs+mXreW7tuaXtu+8jOWNleS9jeenkgogICAgICAqIEBwYXJhbSB7Z2V0Q29udGFpbmVyfSBIVE1MTm9kZSDphY3nva7muLLmn5PoioLngrnnmoTovpPlh7rkvY3nva7vvIzpu5jorqRkb2N1bWVudC5ib2R5CiAgICAgICogQHBhcmFtIHtjbG9zZUljb259IEhUTUxOb2RlIOiHquWumuS5ieWFs+mXreWbvuaghwogICovCgoKICB2YXIgY29uZmlnID0gZnVuY3Rpb24gY29uZmlnKF9jb25maWcpIHsKICAgIHZhciBkdXJhdGlvbiA9IF9jb25maWcuZHVyYXRpb24sCiAgICAgICAgZ2V0Q29udGFpbmVyID0gX2NvbmZpZy5nZXRDb250YWluZXIsCiAgICAgICAgY2xvc2VJY29uID0gX2NvbmZpZy5jbG9zZUljb247CiAgICBOb3RpZmljYXRpb24ubmV3SW5zdGFuY2UoewogICAgICBnZXRDb250YWluZXI6IGdldENvbnRhaW5lciwKICAgICAgLy8gQHRzLWlnbm9yZQogICAgICBkdXJhdGlvbjogZHVyYXRpb24gfHwgNC41LAogICAgICBjbG9zZUljb246IGNsb3NlSWNvbgogICAgfSwgZnVuY3Rpb24gKG5vdGljZSkgewogICAgICByZXR1cm4gbWVzc2FnZSA9IG5vdGljZTsKICAgIH0pOwogIH07CgogIHZhciByZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoa2V5KSB7CiAgICBtZXNzYWdlLnJlbW92ZU5vdGljZShrZXkpOwogIH07CgogIHZhciBkZXN0cm95ID0gZnVuY3Rpb24gZGVzdHJveSgpIHsKICAgIG1lc3NhZ2UuZGVzdHJveSgpOwogIH07CgogIGlmIChtZXNzYWdlKSB7CiAgICByZXR1cm4gewogICAgICBwb3A6IHBvcCwKICAgICAgY29uZmlnOiBjb25maWcsCiAgICAgIHJlbW92ZTogcmVtb3ZlLAogICAgICBkZXN0cm95OiBkZXN0cm95CiAgICB9OwogIH0gLy8g5aaC5p6c5Li65Yib5bu65a6e5L6L77yM5YiZ5Yib5bu66buY6K6k5a6e5L6LCgoKICBOb3RpZmljYXRpb24ubmV3SW5zdGFuY2Uoe30sIGZ1bmN0aW9uIChub3RpY2UpIHsKICAgIHJldHVybiBtZXNzYWdlID0gbm90aWNlOwogIH0pOwogIHJldHVybiB7CiAgICBwb3A6IHBvcCwKICAgIHJlbW92ZTogcmVtb3ZlLAogICAgY29uZmlnOiBjb25maWcsCiAgICBkZXN0cm95OiBkZXN0cm95CiAgfTsKfSgpOwoKdmFyIF9kZWZhdWx0ID0gTWVzc2FnZTsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CgppZiAodHlwZW9mIE1lc3NhZ2UgIT09ICd1bmRlZmluZWQnICYmIE1lc3NhZ2UgJiYgTWVzc2FnZSA9PT0gT2JqZWN0KE1lc3NhZ2UpICYmIE9iamVjdC5pc0V4dGVuc2libGUoTWVzc2FnZSkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTWVzc2FnZSwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIk1lc3NhZ2UiLAogICAgICBmaWxlbmFtZTogInNyYy9jb21wb25lbnRzL01lc3NhZ2UvaW5kZXgudHN4IgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5kZWZhdWx0IDogdW5kZWZpbmVkOwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihNZXNzYWdlLCAiTWVzc2FnZSIsICIvVXNlcnMvbGlhbmdjaGFvZmVpL0Rlc2t0b3AvZmUvY2YtZGVzaWduL3NyYy9jb21wb25lbnRzL01lc3NhZ2UvaW5kZXgudHN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoX2RlZmF1bHQsICJkZWZhdWx0IiwgIi9Vc2Vycy9saWFuZ2NoYW9mZWkvRGVza3RvcC9mZS9jZi1kZXNpZ24vc3JjL2NvbXBvbmVudHMvTWVzc2FnZS9pbmRleC50c3giKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmxlYXZlTW9kdWxlIDogdW5kZWZpbmVkOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/Users/liangchaofei/Desktop/fe/cf-design/src/components/Message/index.tsx"],"names":["Notification","Icon","classnames","React","Message","message","iconType","success","warning","info","error","pop","props","type","className","duration","getContainer","document","body","icon","key","content","onClose","onClick","top","closable","closeIcon","notice","indexOf","style","config","newInstance","remove","removeNotice","destroy"],"mappings":"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","sourcesContent":["\nimport Notification from 'rc-notification'\nimport Icon from '../Icon'\nimport classnames from 'classnames'\nimport 'rc-notification/assets/index.css'\nimport './index.less'\nimport React from 'react'\n\nconst Message = (function(){\n    let message : any= null;\n\n    const iconType = {\n        success: 'FaRegCheckCircle',\n        warning: 'FaRegMeh',\n        info: 'FaRegLightbulb',\n        error: 'FaRegTimesCircle'\n    }\n    /**\n     * notice类型弹窗\n     * @param {config}   提示框配置属性\n     *   @param {type} string 提示窗类型\n     *   @param {btn}  ReactNode 自定义关闭按钮\n     *   @param {className}  string 自定义 CSS class\n     *   @param {duration}   默认 4.5 秒后自动关闭，配置为 null 则不自动关闭\n     *   @param {getContainer}  HTMLNode 配置渲染节点的输出位置\n     *   @param {icon}  ReactNode 自定义图标\n     *   @param {key}  string 当前提示唯一标志\n     *   @param {content}  string|ReactNode 提示标题，必选\n     *   @param {onClose}  func 点击默认关闭按钮时触发的回调函数\n     *   @param {onClick}  func 点击提示时触发的回调函数\n     *   @param {top}  number 消息从顶部弹出时，距离顶部的位置，单位像素\n     *   @param {closeIcon}   自定义关闭图标\n     */\n    const pop = (props:any) => {\n        const {\n            type,\n            className,\n            duration = 4.5,\n            getContainer = () => document.body,\n            icon,\n            key,\n            content,\n            onClose,\n            onClick,\n            top,\n            closable = true,\n            closeIcon\n          } = props;\n          message.notice({\n              content: <div className={classnames('cfMessage',className)}>\n                  {\n                      (icon || ['info','success','error','warning'].indexOf(type)>-1) && \n                      <div className={classnames('iconWrap',type)}>\n                          {\n                              // @ts-ignore\n                              icon ? icon : <Icon type={iconType[type]} />\n                          }\n                      </div>\n                  }\n                  <div className=\"cfNoticeTitle\">\n                      { content }\n                  </div>\n              </div>,\n              key,\n              closable,\n              getContainer,\n              onClose(){\n                onClose && onClose()\n              },\n              onClick(){\n                  onClick && onClick()\n              },\n              closeIcon,\n              duration,\n              style:{top}\n          })\n    }\n\n     /**\n         * 提示提示组件, 全局参数\n         * @param {duration} number 默认自动关闭延时，单位秒\n         * @param {getContainer} HTMLNode 配置渲染节点的输出位置，默认document.body\n         * @param {closeIcon} HTMLNode 自定义关闭图标\n     */\n    const config = (config:any) => {\n        const { duration, getContainer,closeIcon } = config;\n        Notification.newInstance({\n            getContainer: getContainer,\n            // @ts-ignore\n            duration: duration || 4.5,\n            closeIcon\n          }, (notice:any) => message = notice)\n    }\n    const remove = (key:any) => {\n        message.removeNotice(key)\n      }\n    \n      const destroy = () => {\n        message.destroy()\n      }\n    if(message){\n        return {\n            pop,\n            config,\n            remove,\n            destroy\n        }\n    }\n\n    // 如果为创建实例，则创建默认实例\n  Notification.newInstance({}, (notice) => message = notice)\n  return {\n      pop,\n      remove,\n      config,\n      destroy,\n\n  }\n})()\n\nexport default Message;"]}]}